<!DOCTYPE html>
<html>
<head>
    <title>Hover Display Text</title>
    <link rel="stylesheet" href="path/to/simplemde.min.css">
    <style>
        .tooltip {
            position: absolute;
            background-color: #555;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            padding: 5px;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s, visibility 0s linear 0.3s; /* Delay visibility change */
            max-width: 400px; /* Maximum width of the tooltip */
            max-height: 300px; /* Maximum height of the tooltip */
            overflow: auto; /* Add scroll to the tooltip */
            z-index: 9999; /* Set a high z-index to display above other elements */
        }
    </style>
</head>
<body>
    {% for item in items %}
        <span
            class="truncated-text"
            data-full-text="{{ item.text|safe }}"
            onmouseover="showFullText(this)"
            onmouseout="hideFullText()"
        >
            {{ item.text|truncatechars:50 }}
        </span>
    {% endfor %}

    <div class="tooltip" id="tooltip"></div>

    <!-- JavaScript code -->
    <script src="path/to/simplemde.min.js"></script>
    <script>
        var tooltip = document.getElementById("tooltip");
        var activeSimpleMDE = null;

        function showFullText(element) {
            var truncatedText = element;
            var fullText = truncatedText.getAttribute("data-full-text");

            // Set the position of the tooltip
            var rect = truncatedText.getBoundingClientRect();
            tooltip.style.top = (rect.top + window.scrollY) + "px";
            tooltip.style.left = (rect.left + window.scrollX) + "px";

            if (!activeSimpleMDE) {
                // Create a temporary textarea element to use for SimpleMDE
                var textarea = document.createElement("textarea");
                textarea.style.display = "none";
                document.body.appendChild(textarea);

                activeSimpleMDE = new SimpleMDE({
                    element: textarea,
                    spellChecker: false,
                    toolbar: false,
                    status: false,
                    parsingConfig: {
                        allowAtxHeaderWithoutSpace: true,
                        underscoresBreakWords: true,
                    },
                });
            }

            // Render the Markdown text using SimpleMDE
            activeSimpleMDE.value(fullText);

            // Display the tooltip
            tooltip.style.visibility = "visible";
            tooltip.style.opacity = "1";
        }

        function hideFullText() {
            tooltip.style.opacity = "0"; // Fade-out effect
            tooltip.style.visibility = "hidden"; // Hide after fade-out

            // Clear the tooltip content when hidden
            if (activeSimpleMDE) {
                activeSimpleMDE.toTextArea(); // Destroy the SimpleMDE instance
                activeSimpleMDE = null;
                // Remove the temporary textarea element from the document
                var textarea = document.querySelector(".CodeMirror textarea");
                if (textarea) {
                    textarea.parentNode.removeChild(textarea);
                }
            }
        }

        // Hide tooltip if the mouse moves out of the current target element
        document.addEventListener("mousemove", function (event) {
            var tooltipRect = tooltip.getBoundingClientRect();
            if (
                activeSimpleMDE &&
                (
                    event.clientX < tooltipRect.left ||
                    event.clientX > tooltipRect.right ||
                    event.clientY < tooltipRect.top ||
                    event.clientY > tooltipRect.bottom
                )
            ) {
                hideFullText();
            }
        });
    </script>
</body>
</html>
